#-------------------------THYMIO - BEACON - BROADCAST - RECEIVER OR SENDER------- ACRONYM (BBRS)
#-------------------- THERE ARE TWO MOST IMPORTANT BEHAVIOUR TO EXPECT FROM THE BBRS---------
#----------------- 1. THYMIO HAS BROADCAST SENDER
#---------------------- FOR BBRS TO SEND MESSAGE FROM A KNOW BBRS_ID IT MUST PASSED THE MESSAGE TO A	TO DELIVERY SERVICE ROBOT

#------------------ 2. THYMIO HAS BROADCAST RECEIVER
#----------------------------- FOR BBRS TO RECEIVE TO MESSAGE ITS ID MUST MATCH THE CORRESPONDING DESTINATION_ID BROADCASTED BY THE SERVICE DELIVERY

var init_BBRS_as_Sender = 0
var init_BBRS_as_Reciever = 0
#-------------default variables--
var BBRS_ID = 54
var SENDER_ID = BBRS_ID
var DESTINATION_ID = 55 # THIS VARIABLE IS ASSOCIATED TO A KNOWN BBRS WITH ID 55
var messagePassedToDeliveryService = 0

#----------required ACKS FROM SERVICE DELIVERY to ensure message has being passed
var ACK_SENDER_ID = 0 # THIS IS RECEIVED FROM SERVICE DELIVERY
var ACK_DESTINATION_ID = 0 # THIS IS RECEIVED FROM SERVICE DELIVERY
var COUNTER_BEFORE_NEXT_ACK = 0
#__________________________________________________________________________________________VARIABLE COUNTER FOR TIMERS
var countSetTimer0 = 0
var timerWait = 0
var initTimer2ForSound = 0

#_________________________________________________________________________________________________________TIMER 0
onevent timer0
		if (init_BBRS_as_Sender ==1) then
			call sound.system(5)
			countSetTimer0++
			call leds.top(32,0,0) 	
		
			if (countSetTimer0 > 0) then
				call leds.top(0,0,0) 	
				timer.period[0] = 0 # timer sleep
				initTimer2ForSound =1 # variable required so that timer 1 is reusable
				timer.period[1] = 500 # init timer 1
			end
		end
	
#___________________________________________________________________________________________________________TIMER 1
onevent timer1
		if (init_BBRS_as_Sender == 1) then
			
					if (initTimer2ForSound == 1) then
						timerWait++
							if (timerWait > 2) then
									call leds.top(32,0,0) 	
									call sound.system(5)
									timer.period[0] = 200
									timerWait = 0
							end
					end
		end
					
#________________________________________________________________________________________________________REMOTE CONTROL
#--------using remote control we can choose who will be SENDER with value = 1 AND RECEIVER WITH value = 2
onevent rc5
	if (rc5.command == 1) then #------------INITIALISE THE BBRS TO BE THE SENDER
#[ FOR BBRS BEACON SOUND ]#
		timer.period[0] = 200
		call sound.system(5)
		init_BBRS_as_Sender = 1 # --set BBRS AS SENDER
		init_BBRS_as_Reciever = 0#-----BBRS RECEIVE ABILITY DISABLED
		call prox.comm.enable(1)#----------ENABLE COMMUNICATION
		prox.comm.tx = SENDER_ID#---------------BROADCAST OWN BBRS_ID
	end	
	if (rc5.command == 2 ) then #------------INITIALISE THE BBRS TO BE THE RECEIVER
		init_BBRS_as_Reciever =1 #--------enable BBRS AS RECEIVER
		init_BBRS_as_Sender = 0 # -------------BBRS SENDER ABILITY DISABLED
		call leds.top(32,32,32)
		call prox.comm.enable(1) #---------------------ONLY REQUIRED TO RECEIVE AND NOT SEND MESSAGE
		# reset default
		call sound.system(-1)
		timer.period[0] = 0
		timer.period[1] = 0
	end

#_+______________________________________________________________________________________________PROX EVENT TO SEND AND RECIEVE MESSAGE

onevent prox.comm
			if (init_BBRS_as_Sender == 1) then #------------------------------------------------------------------------------- BEHAVIOUR HAS A BROADCAST SENDER
					#-------------------------broadcast own BBRS_id
				prox.comm.tx = SENDER_ID
				#-------------------------------check for ack from delivery service
				if (prox.comm.rx == (SENDER_ID + 1000) ) then
					call leds.top(32,32,0) # top led turns yellow
					ACK_SENDER_ID = (SENDER_ID + 1000) # save the sender_id ack state
					prox.comm.tx = DESTINATION_ID # IF ACK_SENDER_ID RECIEVED SEND DESTINATION_ID
					COUNTER_BEFORE_NEXT_ACK++
				end
				if (prox.comm.rx == (DESTINATION_ID + 1001)) then
					call leds.top(0,32,0) # top turns green indicating successful
					ACK_DESTINATION_ID = (DESTINATION_ID + 1001) # save the destination_id ack state
					messagePassedToDeliveryService = 1
				end
				#if message passed succesfully to delivery service shutoff sound
				if (messagePassedToDeliveryService ==1) then
					init_BBRS_as_Sender = 0
					call leds.top(0,32,0) 
				end
end
if (init_BBRS_as_Reciever == 1) then #---------------------------------------------------------------------------------------------BEHAVIOUR HAS A BROADCAST RECEIVER
	
end


